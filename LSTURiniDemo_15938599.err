Loaded dependency [numpy/1.22.3-python-3.9.11-openblas-0.3.19]: openblas/0.3.19
Loaded dependency [python3/3.9.11]: gcc/10.3.0-binutils-2.36.1
Loaded dependency [numpy/1.22.3-python-3.9.11-openblas-0.3.19]: python3/3.9.11
Loaded dependency [scipy/1.7.3-python-3.9.11]: numpy/1.22.3-python-3.9.11-openblas-0.3.19
Loaded module: scipy/1.7.3-python-3.9.11

Loading scipy/1.7.3-python-3.9.11
  Loading requirement: openblas/0.3.19 gcc/10.3.0-binutils-2.36.1 python3/3.9.11
    numpy/1.22.3-python-3.9.11-openblas-0.3.19
Loaded module: cuda/11.7
Some weights of the model checkpoint at bert-base-uncased were not used when initializing BertModel: ['cls.predictions.transform.LayerNorm.weight', 'cls.predictions.decoder.weight', 'cls.seq_relationship.weight', 'cls.predictions.bias', 'cls.predictions.transform.dense.bias', 'cls.seq_relationship.bias', 'cls.predictions.transform.dense.weight', 'cls.predictions.transform.LayerNorm.bias']
- This IS expected if you are initializing BertModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing BertModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
0it [00:00, ?it/s]0it [00:00, ?it/s]
Some weights of the model checkpoint at bert-base-uncased were not used when initializing BertModel: ['cls.predictions.transform.LayerNorm.weight', 'cls.predictions.decoder.weight', 'cls.seq_relationship.weight', 'cls.predictions.bias', 'cls.predictions.transform.dense.bias', 'cls.seq_relationship.bias', 'cls.predictions.transform.dense.weight', 'cls.predictions.transform.LayerNorm.bias']
- This IS expected if you are initializing BertModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing BertModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Traceback (most recent call last):
  File "/work3/s204117/News-Recommendations/TrainLsturBertpre.py", line 86, in <module>
    output = model(User_en, Category, Subcategory, History_tensor, history_len, Category_Impressions[:,:idx], Subcategory_Impressions[:,:idx], Impressions_tensor[:,:idx])
  File "/work3/s204117/News-Recommendations/venv_1/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/work3/s204117/News-Recommendations/LSTURiniBert.py", line 120, in forward
    Users = self.UserEncoder(users,topic,subtopic, W, src_len)
  File "/work3/s204117/News-Recommendations/venv_1/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/work3/s204117/News-Recommendations/LSTURiniBert.py", line 97, in forward
    news_embed[i] = self.NewsEncoder(topic[i],subtopic[i], W[i])
  File "/work3/s204117/News-Recommendations/venv_1/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/work3/s204117/News-Recommendations/LSTURiniBert.py", line 70, in forward
    title = self.TitleEncoder(W)
  File "/work3/s204117/News-Recommendations/venv_1/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/work3/s204117/News-Recommendations/LSTURiniBert.py", line 35, in forward
    O_bert = self.bert(W)
  File "/work3/s204117/News-Recommendations/venv_1/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/work3/s204117/News-Recommendations/venv_1/lib/python3.9/site-packages/transformers/models/bert/modeling_bert.py", line 985, in forward
    buffered_token_type_ids_expanded = buffered_token_type_ids.expand(batch_size, seq_length)
RuntimeError: The expanded size of the tensor (768) must match the existing size (512) at non-singleton dimension 1.  Target sizes: [50, 768].  Tensor sizes: [1, 512]
